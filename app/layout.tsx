import { AppRouterCacheProvider } from "@mui/material-nextjs/v13-appRouter";
import type { Metadata } from "next";
import "./globals.css";
import "./ui/material3-tokens/dark.css";
import "./ui/material3-tokens/light.css";
import ThemeProvider from "./lib/contexts/themeContext";
import TokenProvider from "./lib/contexts/tokenContext";
import App from "./ui/App";
import localFont from "next/font/local";
import CartProvider from "./lib/contexts/cartContext";
import MUICustomThemeProvider from "./lib/contexts/MuiThemeContext";
// import dynamic from "next/dynamic";
// const NoSSRTokenProvider = dynamic(() => import("./lib/contexts/tokenContext"), { ssr: false });

export const metadata: Metadata = {
  title: "Create Next App", 
  description: "Generated by create next app",
};
const GoogleSans = localFont({ src: "../public/assets/fonts/GoogleSans-Regular.ttf" });


export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html  suppressHydrationWarning lang="en" className="light">
      <head>
        <script
          dangerouslySetInnerHTML={{
            __html: `
              const userTheme = localStorage.getItem('theme');
              document.documentElement.classList.remove('dark');
              document.documentElement.classList.remove('light');
              if (userTheme) {
                document.documentElement.classList.add(userTheme);
                } else {
                  document.documentElement.classList.add('light');
              }
              try{
                if (userTheme) {
                document.documentElement.setAttribute("data-mui-color-scheme" ,userTheme);
                } else {
                  document.documentElement.setAttribute("data-mui-color-scheme",'light');
              }
              }catch (err){console.log(err)}`,
          }}
        />
      </head>
      <body className={`${GoogleSans.className}`}>
        <AppRouterCacheProvider>
          <MUICustomThemeProvider>
            <ThemeProvider>
              <TokenProvider>
                <CartProvider>
                  <App>{children}</App>
                </CartProvider>
              </TokenProvider>
            </ThemeProvider>
          </MUICustomThemeProvider>
        </AppRouterCacheProvider>
      </body>
    </html>
  );
}
